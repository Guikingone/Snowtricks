security:
    encoders:
        UserBundle\Entity\User: bcrypt
    providers:
        user:
            entity:
                class: UserBundle:User
                property: username
        in_memory:
            memory: ~

    role_hierarchy:
        ROLE_SUPERADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN: ROLE_USER

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Main firewall used for back usage.
        main:
            anonymous: ~
            provider: user
            form_login:
               login_path: login
               check_path: login
               csrf_token_generator: security.csrf.token_manager
               default_target_path: home
               failure_path: login
            logout:
               path:    /logout
               target:  /
            remember_me:
                name: _snowtricks
                secret:    '%secret%'
                lifetime:    259200
                path:    /admin

        # JWT configuration
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        api:
            pattern:   ^/api
            stateless: true
            guard:
                 authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
       - { path: ^/admin, roles: ROLE_ADMIN }

       # JWT access_control
       - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
